# Generated by Django 5.2.6 on 2025-10-03 13:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IndustryTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SkillTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('industry', models.CharField(blank=True, max_length=255)),
                ('website', models.URLField(blank=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=40)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=120)),
                ('country', models.CharField(blank=True, max_length=120)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='businesses/logos/')),
                ('verified', models.BooleanField(default=False)),
                ('industries', models.ManyToManyField(blank=True, related_name='businesses', to='organizations.industrytag')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('code', models.CharField(blank=True, help_text='Short code identifier (e.g., SCH-001)', max_length=20)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=120)),
                ('country', models.CharField(blank=True, max_length=120)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=40)),
                ('website', models.URLField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='schools/logos/')),
                ('description', models.TextField(blank=True)),
                ('capacity', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('ranking', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='organizatio_name_36acc6_idx'), models.Index(fields=['slug'], name='organizatio_slug_bf9097_idx'), models.Index(fields=['city', 'country'], name='organizatio_city_96da4f_idx')],
                'constraints': [models.UniqueConstraint(fields=('name', 'city', 'country'), name='uniq_school_name_city_country')],
            },
        ),
        migrations.CreateModel(
            name='Partnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('suspended', 'Suspended'), ('ended', 'Ended')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerships', to='organizations.business')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerships', to='organizations.school')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('enrollment_year', models.PositiveIntegerField(blank=True, null=True)),
                ('grade_level', models.CharField(blank=True, help_text='e.g., Grade 10, Year 3, Level 200', max_length=50)),
                ('bio', models.TextField(blank=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='students/avatars/')),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('allow_tracking', models.BooleanField(default=True, help_text='Consent for businesses to track progress.')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='organizations.school')),
                ('skills', models.ManyToManyField(blank=True, related_name='students', to='organizations.skilltag')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='BusinessStudentTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('stage', models.CharField(choices=[('interested', 'Interested'), ('shortlisted', 'Shortlisted'), ('interviewing', 'Interviewing'), ('offered', 'Offered'), ('hired', 'Hired'), ('rejected', 'Rejected')], db_index=True, default='interested', max_length=20)),
                ('tracking_reason', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('source', models.CharField(blank=True, help_text='Where this candidate was found (e.g., Hackathon)', max_length=120)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracked_students', to='organizations.business')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracked_by', to='organizations.studentprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='business',
            index=models.Index(fields=['name'], name='organizatio_name_4ae1b3_idx'),
        ),
        migrations.AddIndex(
            model_name='business',
            index=models.Index(fields=['slug'], name='organizatio_slug_cfacf1_idx'),
        ),
        migrations.AddIndex(
            model_name='business',
            index=models.Index(fields=['verified'], name='organizatio_verifie_3f3c13_idx'),
        ),
        migrations.AddIndex(
            model_name='partnership',
            index=models.Index(fields=['status'], name='organizatio_status_5eb71f_idx'),
        ),
        migrations.AddIndex(
            model_name='partnership',
            index=models.Index(fields=['school', 'business'], name='organizatio_school__3252c5_idx'),
        ),
        migrations.AddConstraint(
            model_name='partnership',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__gte', models.F('start_date')), ('end_date__isnull', True), _connector='OR'), name='partnership_end_after_start'),
        ),
        migrations.AlterUniqueTogether(
            name='partnership',
            unique_together={('school', 'business')},
        ),
        migrations.AddIndex(
            model_name='studentprofile',
            index=models.Index(fields=['school'], name='organizatio_school__f9f5b2_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprofile',
            index=models.Index(fields=['allow_tracking'], name='organizatio_allow_t_0fd685_idx'),
        ),
        migrations.AddIndex(
            model_name='businessstudenttracking',
            index=models.Index(fields=['business', 'stage'], name='organizatio_busines_ba247e_idx'),
        ),
        migrations.AddIndex(
            model_name='businessstudenttracking',
            index=models.Index(fields=['student'], name='organizatio_student_2415f6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='businessstudenttracking',
            unique_together={('business', 'student')},
        ),
    ]
