# Generated by Django 5.2.6 on 2025-10-03 15:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0005_rename_industries_business_industry_business_address_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('comp_type', models.CharField(choices=[('local', 'Local'), ('world_cup', 'World Cup')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('max_schools', models.PositiveIntegerField(default=0, help_text='0 means unlimited')),
                ('max_students', models.PositiveIntegerField(default=0, help_text='0 means unlimited')),
                ('discipline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='competitions', to='organizations.skilltag')),
            ],
            options={
                'ordering': ['-start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolCompetitionEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('score', models.IntegerField(db_index=True, default=0)),
                ('rank', models.PositiveIntegerField(default=0, help_text='Optional cached rank')),
                ('disqualified', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='competitions.competition')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competition_entries', to='organizations.school')),
            ],
            options={
                'ordering': ['-score', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='competition',
            name='schools',
            field=models.ManyToManyField(blank=True, related_name='competitions', through='competitions.SchoolCompetitionEntry', to='organizations.school'),
        ),
        migrations.CreateModel(
            name='StudentCompetitionEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('score', models.IntegerField(db_index=True, default=0)),
                ('rank', models.PositiveIntegerField(default=0, help_text='Optional cached rank')),
                ('disqualified', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_entries', to='competitions.competition')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competition_entries', to='organizations.studentprofile')),
            ],
            options={
                'ordering': ['-score', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='competition',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='competitions', through='competitions.StudentCompetitionEntry', to='organizations.studentprofile'),
        ),
        migrations.CreateModel(
            name='CompetitionDisqualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disqualifications', to='competitions.competition')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='competition_disq', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disqualifications', to='organizations.school')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disqualifications', to='organizations.studentprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('school__isnull', False), ('student__isnull', True)), models.Q(('school__isnull', True), ('student__isnull', False)), _connector='OR'), name='disq_one_target')],
            },
        ),
        migrations.CreateModel(
            name='CompetitionScoreEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('points', models.IntegerField()),
                ('category', models.CharField(choices=[('manual', 'Manual'), ('activity', 'Activity'), ('bonus', 'Bonus'), ('penalty', 'Penalty')], default='manual', max_length=20)),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_events', to='competitions.competition')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='competition_events', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competition_scores', to='organizations.school')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competition_scores', to='organizations.studentprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['competition', '-created_at'], name='competition_competi_dc7c63_idx'), models.Index(fields=['school'], name='competition_school__16f7d5_idx'), models.Index(fields=['student'], name='competition_student_deaab0_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('school__isnull', False), ('student__isnull', True)), models.Q(('school__isnull', True), ('student__isnull', False)), _connector='OR'), name='score_event_one_target')],
            },
        ),
        migrations.AddIndex(
            model_name='schoolcompetitionentry',
            index=models.Index(fields=['competition', '-score'], name='competition_competi_7bcefd_idx'),
        ),
        migrations.AddIndex(
            model_name='schoolcompetitionentry',
            index=models.Index(fields=['school', 'competition'], name='competition_school__08cc1b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='schoolcompetitionentry',
            unique_together={('school', 'competition')},
        ),
        migrations.AddIndex(
            model_name='studentcompetitionentry',
            index=models.Index(fields=['competition', '-score'], name='competition_competi_043783_idx'),
        ),
        migrations.AddIndex(
            model_name='studentcompetitionentry',
            index=models.Index(fields=['student', 'competition'], name='competition_student_0ce0d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentcompetitionentry',
            unique_together={('student', 'competition')},
        ),
        migrations.AddIndex(
            model_name='competition',
            index=models.Index(fields=['slug'], name='competition_slug_3d2671_idx'),
        ),
        migrations.AddIndex(
            model_name='competition',
            index=models.Index(fields=['comp_type'], name='competition_comp_ty_c24e03_idx'),
        ),
        migrations.AddIndex(
            model_name='competition',
            index=models.Index(fields=['start_date', 'end_date'], name='competition_start_d_0c3c89_idx'),
        ),
        migrations.AddConstraint(
            model_name='competition',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__gte', models.F('start_date'))), name='competition_end_after_start'),
        ),
    ]
